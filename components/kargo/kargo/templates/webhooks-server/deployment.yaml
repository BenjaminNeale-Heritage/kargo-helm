---
# Source: kargo/templates/webhooks-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kargo-webhooks-server
  namespace: kargo-kargo
  labels:
    helm.sh/chart: kargo-0.1.0
    app.kubernetes.io/name: kargo
    app.kubernetes.io/instance: kargo
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhooks-server
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kargo
      app.kubernetes.io/instance: kargo
      app.kubernetes.io/component: webhooks-server
  template:
    metadata:
      labels:
        helm.sh/chart: kargo-0.1.0
        app.kubernetes.io/name: kargo
        app.kubernetes.io/instance: kargo
        app.kubernetes.io/version: "v0.1.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: webhooks-server
      annotations:
        configmap/checksum: 6220f0130e5f0bded86efb1f1066398562cccbd16314fb6b880819033a8302bd
    spec:
      serviceAccount: kargo-webhooks-server
      containers:
      - name: webhooks-server
        image: ghcr.io/akuity/kargo:v1.0.3
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/bin/kargo", "webhooks-server"]
        envFrom:
        - configMapRef:
            name: kargo-webhooks-server
        ports:
        - containerPort: 9443
          name: webhooks-server
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        resources:
          {}
      volumes:
      - name: cert
        secret:
          defaultMode: 0644
          secretName: kargo-webhooks-server-cert
