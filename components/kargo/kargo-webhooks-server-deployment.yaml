apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhooks-server
    app.kubernetes.io/instance: kargo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kargo
    app.kubernetes.io/version: v0.1.0
    helm.sh/chart: kargo-0.1.0
  name: kargo-webhooks-server
  namespace: kargo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhooks-server
      app.kubernetes.io/instance: kargo
      app.kubernetes.io/name: kargo
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        configmap/checksum: f5a272a41ab010875655733b999fc39948206d2ee45448f13813e7862ef0c669
      labels:
        app.kubernetes.io/component: webhooks-server
        app.kubernetes.io/instance: kargo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kargo
        app.kubernetes.io/version: v0.1.0
        helm.sh/chart: kargo-0.1.0
    spec:
      containers:
      - command:
        - /usr/local/bin/kargo
        - webhooks-server
        envFrom:
        - configMapRef:
            name: kargo-webhooks-server
        image: ghcr.io/akuity/kargo:v1.0.3
        imagePullPolicy: IfNotPresent
        name: webhooks-server
        ports:
        - containerPort: 9443
          name: webhooks-server
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccount: kargo-webhooks-server
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: kargo-webhooks-server-cert
